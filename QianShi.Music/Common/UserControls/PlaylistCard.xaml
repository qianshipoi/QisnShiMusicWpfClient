<UserControl
    x:Class="QianShi.Music.Common.UserControls.PlaylistCard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conver="clr-namespace:QianShi.Music.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:QianShi.Music.Common.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="280"
    d:DesignWidth="210"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <conver:NumberConverter x:Key="NumberConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Border BorderThickness="0" CornerRadius="10">
        <StackPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PlaylistCard}}}">
            <local:PlaylistCover
                Margin="0,0,0,10"
                CornerRadius="10"
                ImageClick="FilletImage_ImageClick"
                ImageSource="{Binding Cover}"
                PlayCommand="{Binding PlayCommand}" />
            <WrapPanel
                x:Name="PlayCountControl"
                Opacity="0.58"
                Visibility="Collapsed">
                <materialDesign:PackIcon Kind="Play" />
                <TextBlock FontSize="12" Text="{Binding AmountOfPlay, Converter={StaticResource NumberConverter}}" />
            </WrapPanel>
            <Button
                x:Name="DescriptionButton"
                Margin="2,0"
                Click="FilletImage_ImageClick"
                Cursor="Hand"
                Style="{StaticResource NoneButtonStyle}">
                <TextBlock
                    MaxHeight="42"
                    Cursor="Hand"
                    FontSize="{Binding TitleFontSize}"
                    FontWeight="Bold"
                    Style="{StaticResource UnderlineTextBlock}"
                    Text="{Binding Title}"
                    TextWrapping="WrapWithOverflow" />
            </Button>
            <Button
                x:Name="DescriptionControl"
                Margin="2,2,0,0"
                Command="{Binding DescriptionCommand}"
                CommandParameter="{Binding DescriptionCommandParameter}"
                Style="{StaticResource NoneButtonStyle}"
                Visibility="Collapsed">
                <TextBlock
                    MaxHeight="40"
                    Margin="2,2,0,0"
                    FontSize="12px"
                    Opacity=".68"
                    Text="{Binding Description}"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Cursor" Value="Arrow" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding DescriptionCanClick}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DescriptionCommand}" CommandParameter="{Binding DescriptionCommandParameter}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                </TextBlock>
            </Button>
        </StackPanel>
    </Border>
</UserControl>